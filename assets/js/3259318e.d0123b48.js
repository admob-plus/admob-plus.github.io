(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{163:function(e,r,a){"use strict";a.d(r,"a",(function(){return b})),a.d(r,"b",(function(){return p}));var d=a(0),n=a.n(d);function t(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function o(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);r&&(d=d.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,d)}return a}function i(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?o(Object(a),!0).forEach((function(r){t(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function c(e,r){if(null==e)return{};var a,d,n=function(e,r){if(null==e)return{};var a,d,n={},t=Object.keys(e);for(d=0;d<t.length;d++)a=t[d],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(d=0;d<t.length;d++)a=t[d],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=n.a.createContext({}),l=function(e){var r=n.a.useContext(s),a=r;return e&&(a="function"==typeof e?e(r):i(i({},r),e)),a},b=function(e){var r=l(e.components);return n.a.createElement(s.Provider,{value:r},e.children)},w={inlineCode:"code",wrapper:function(e){var r=e.children;return n.a.createElement(n.a.Fragment,{},r)}},m=n.a.forwardRef((function(e,r){var a=e.components,d=e.mdxType,t=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=l(a),m=d,p=b["".concat(o,".").concat(m)]||b[m]||w[m]||t;return a?n.a.createElement(p,i(i({ref:r},s),{},{components:a})):n.a.createElement(p,i({ref:r},s))}));function p(e,r){var a=arguments,d=r&&r.mdxType;if("string"==typeof e||d){var t=a.length,o=new Array(t);o[0]=m;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:d,o[1]=i;for(var s=2;s<t;s++)o[s]=a[s];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},92:function(e,r,a){"use strict";a.r(r),a.d(r,"frontMatter",(function(){return o})),a.d(r,"metadata",(function(){return i})),a.d(r,"toc",(function(){return c})),a.d(r,"default",(function(){return l}));var d=a(3),n=a(7),t=(a(0),a(163)),o={title:"Rewarded Ad",sidebar_label:"Rewarded"},i={unversionedId:"cordova/ads/rewarded",id:"cordova/ads/rewarded",isDocsHomePage:!1,title:"Rewarded Ad",description:"Rewarded ads are ads that users have the option of interacting with in exchange for in-app rewards.",source:"@site/docs/cordova/ads/rewarded.md",slug:"/cordova/ads/rewarded",permalink:"/docs/cordova/ads/rewarded",editUrl:"https://github.com/admob-plus/admob-plus/edit/master/website/docs/cordova/ads/rewarded.md",version:"current",sidebar_label:"Rewarded",sidebar:"docs",previous:{title:"Interstitial Ad",permalink:"/docs/cordova/ads/interstitial"},next:{title:"Rewarded Interstitial Ad",permalink:"/docs/cordova/ads/rewarded-interstitial"}},c=[{value:"Usage",id:"usage",children:[]},{value:"Events",id:"events",children:[{value:"<code>admob.rewarded.load</code>",id:"admobrewardedload",children:[]},{value:"<code>admob.rewarded.loadfail</code>",id:"admobrewardedloadfail",children:[]},{value:"<code>admob.rewarded.show</code>",id:"admobrewardedshow",children:[]},{value:"<code>admob.rewarded.showfail</code>",id:"admobrewardedshowfail",children:[]},{value:"<code>admob.rewarded.reward</code>",id:"admobrewardedreward",children:[]},{value:"<code>admob.rewarded.dismiss</code>",id:"admobrewardeddismiss",children:[]},{value:"<code>admob.rewarded.impression</code>",id:"admobrewardedimpression",children:[]}]},{value:"Server-side Verification",id:"server-side-verification",children:[]}],s={toc:c};function l(e){var r=e.components,a=Object(n.a)(e,["components"]);return Object(t.b)("wrapper",Object(d.a)({},s,a,{components:r,mdxType:"MDXLayout"}),Object(t.b)("p",null,"Rewarded ads are ads that users have the option of interacting with in exchange for in-app rewards."),Object(t.b)("h2",{id:"usage"},"Usage"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-js"},"let rewarded\n\ndocument.addEventListener('deviceready', async () => {\n  await admob.start()\n\n  rewarded = new admob.RewardedAd({\n    adUnitId: 'ca-app-pub-xxx/yyy',\n  })\n\n  await rewarded.load()\n  await rewarded.show()\n}, false)\n\ndocument.addEventListener('admob.rewarded.dismiss', async () => {\n  // Once a rewarded ad is shown, it cannot be shown again.\n  // Starts loading the next rewarded ad as soon as it is dismissed.\n  await rewarded.load()\n})\n")),Object(t.b)("h2",{id:"events"},"Events"),Object(t.b)("h3",{id:"admobrewardedload"},Object(t.b)("inlineCode",{parentName:"h3"},"admob.rewarded.load")),Object(t.b)("h3",{id:"admobrewardedloadfail"},Object(t.b)("inlineCode",{parentName:"h3"},"admob.rewarded.loadfail")),Object(t.b)("h3",{id:"admobrewardedshow"},Object(t.b)("inlineCode",{parentName:"h3"},"admob.rewarded.show")),Object(t.b)("h3",{id:"admobrewardedshowfail"},Object(t.b)("inlineCode",{parentName:"h3"},"admob.rewarded.showfail")),Object(t.b)("h3",{id:"admobrewardedreward"},Object(t.b)("inlineCode",{parentName:"h3"},"admob.rewarded.reward")),Object(t.b)("p",null,"User has earned reward."),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-js"},'{\n  reward: {\n    amount: 10,\n    type: "coins"\n  }\n}\n')),Object(t.b)("h3",{id:"admobrewardeddismiss"},Object(t.b)("inlineCode",{parentName:"h3"},"admob.rewarded.dismiss")),Object(t.b)("h3",{id:"admobrewardedimpression"},Object(t.b)("inlineCode",{parentName:"h3"},"admob.rewarded.impression")),Object(t.b)("h2",{id:"server-side-verification"},"Server-side Verification"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",{parentName:"li",href:"/docs/cordova/rewarded-ads-ssv"},"Rewarded Ads Server-side Verification"))))}l.isMDXComponent=!0}}]);