(self.webpackChunkadmob_plus_website=self.webpackChunkadmob_plus_website||[]).push([[4530],{1080:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(3289);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,f=p["".concat(i,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9201:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return i},default:function(){return u}});var r=n(379),o=n(8988),a=(n(3289),n(1080)),s={title:"Request User Consent",sidebar_label:"Request Consent",slug:"/cordova/consent"},c={unversionedId:"cordova/consent/request",id:"cordova/consent/request",isDocsHomePage:!1,title:"Request User Consent",description:"Installation",source:"@site/docs/cordova/consent/request.md",sourceDirName:"cordova/consent",slug:"/cordova/consent",permalink:"/docs/cordova/consent",editUrl:"https://github.com/admob-plus/admob-plus/edit/master/website/docs/cordova/consent/request.md",version:"current",sidebar_label:"Request Consent",frontMatter:{title:"Request User Consent",sidebar_label:"Request Consent",slug:"/cordova/consent"},sidebar:"docs",previous:{title:"Video Ad Volume Control",permalink:"/docs/cordova/volume-control"},next:{title:"cordova-plugin-consent",permalink:"/docs/cordova/consent/api"}},i=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Forward consent",id:"forward-consent",children:[]},{value:"References",id:"references",children:[]}],l={toc:i};function u(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cordova plugin add cordova-plugin-consent\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"document.addEventListener('deviceready', async () => {\n  if (cordova.platformId === 'ios') {\n    const trackingAuthorizationStatus = await admob.requestTrackingAuthorization()\n    /*\n      trackingAuthorizationStatus:\n      0 = notDetermined\n      1 = restricted\n      2 = denied\n      3 = authorized\n    */\n  }\n\n  const consentStatus = await consent.getConsentStatus()\n  if (consentStatus === consent.ConsentStatus.Required) {\n    await consent.requestInfoUpdate()\n  }\n\n  const formStatus = await consent.getFormStatus()\n  if (formStatus === consent.FormStatus.Available) {\n      const form = await consent.loadForm()\n      form.show()\n  }\n}, false)\n")),(0,a.kt)("h2",{id:"forward-consent"},"Forward consent"),(0,a.kt)("p",null,"If a user has consented to receive only non-personalized ads, pass ",(0,a.kt)("inlineCode",{parentName:"p"},'npa="1"')," when creating the ad, e.g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"{3}","{3}":!0},"new admob.BannerAd({\n  adUnitId: 'ca-app-pub-xxx/yyy',\n  npa: '1',\n})\n")),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/cordova/api/enums/trackingauthorizationstatus"},"TrackingAuthorizationStatus")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developers.google.com/admob/ump/android/quick-start"},"UMP SDK for Android")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developers.google.com/admob/ump/ios/quick-start"},"UMP SDK for iOS")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.apple.com/documentation/apptrackingtransparency"},"AppTrackingTransparency Framework"))))}u.isMDXComponent=!0}}]);